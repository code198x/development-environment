name: Build System Image

on:
  workflow_call:
    inputs:
      system-name:
        required: true
        type: string
        description: 'System name (e.g., commodore-64)'
      display-name:
        required: true
        type: string
        description: 'Display name for the system (e.g., Commodore 64)'
      test-command:
        required: false
        type: string
        default: '--help'
        description: 'Command to test the image'
    secrets:
      DOCKER_USERNAME:
        required: false
      DOCKER_TOKEN:
        required: false

env:
  DOCKER_ORG: code198x
  GHCR_ORG: ghcr.io/code198x

permissions:
  contents: read
  packages: write
  security-events: write

jobs:
  build:
    name: ${{ inputs.display-name }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check for Docker Hub credentials
        id: check-docker-creds
        run: |
          if [ -n "${{ secrets.DOCKER_USERNAME }}" ] && [ -n "${{ secrets.DOCKER_TOKEN }}" ]; then
            echo "has-creds=true" >> $GITHUB_OUTPUT
          else
            echo "has-creds=false" >> $GITHUB_OUTPUT
          fi

      - name: Log in to Docker Hub
        if: steps.check-docker-creds.outputs.has-creds == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_ORG }}/${{ inputs.system-name }}
            ${{ steps.check-docker-creds.outputs.has-creds == 'true' && format('{0}/{1}', env.DOCKER_ORG, inputs.system-name) || '' }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-

      - name: Build and push ${{ inputs.display-name }}
        uses: docker/build-push-action@v5
        with:
          context: ./systems/${{ inputs.system-name }}
          file: ./systems/${{ inputs.system-name }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test ${{ inputs.display-name }} image
        run: |
          echo "üîç Testing ${{ inputs.display-name }} image..."
          docker run --rm ${{ env.GHCR_ORG }}/${{ inputs.system-name }}:latest ${{ inputs.test-command }} || \
          echo "‚ÑπÔ∏è Test command may not be supported"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.GHCR_ORG }}/${{ inputs.system-name }}:latest'
          format: 'sarif'
          output: 'trivy-${{ inputs.system-name }}.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-${{ inputs.system-name }}.sarif'
          category: 'trivy-${{ inputs.system-name }}'