name: Build Base Images

on:
  push:
    branches: [main]
    paths:
      - 'base-images/*/Dockerfile'
      - 'scripts/build-base-images.sh'
      - '.github/workflows/build-base-images.yml'
  pull_request:
    branches: [main]
    paths:
      - 'base-images/*/Dockerfile'
  workflow_dispatch:
  workflow_call:
    outputs:
      base-images-built:
        description: "Whether base images were built"
        value: ${{ jobs.build-base-images.outputs.built }}

# No concurrency group - this workflow is called from docker-build.yml
# The parent workflow handles concurrency control

env:
  DOCKER_ORG: code198x
  GHCR_ORG: ghcr.io/code198x

permissions:
  contents: read
  packages: write
  actions: read

jobs:
  build-code198x-base:
    name: Build code198x-base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check for Docker Hub credentials
        id: check-docker-creds
        run: |
          if [ -n "${{ secrets.DOCKER_USERNAME }}" ] && [ -n "${{ secrets.DOCKER_TOKEN }}" ]; then
            echo "has-creds=true" >> $GITHUB_OUTPUT
          else
            echo "has-creds=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è Docker Hub credentials not configured. Will push to GitHub Container Registry only."
          fi

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request' && steps.check-docker-creds.outputs.has-creds == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_ORG }}/code198x-base
            ${{ steps.check-docker-creds.outputs.has-creds == 'true' && format('{0}/code198x-base', env.DOCKER_ORG) || '' }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value={{date 'YYYYMMDD'}},enable={{is_default_branch}}

      - name: Build and push code198x-base
        uses: docker/build-push-action@v5
        with:
          context: ./base-images/code198x-base
          file: ./base-images/code198x-base/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-arch-bases:
    name: Build ${{ matrix.base-image }}
    runs-on: ubuntu-latest
    needs: build-code198x-base
    strategy:
      fail-fast: false
      matrix:
        include:
          - base-image: 6502-base
            architecture: 6502
            description: "Base image for 6502 family processors"
          - base-image: z80-base
            architecture: z80
            description: "Base image for Z80 family processors"
          - base-image: 68000-base
            architecture: 68000
            description: "Base image for 68000 family processors"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check for Docker Hub credentials
        id: check-docker-creds
        run: |
          if [ -n "${{ secrets.DOCKER_USERNAME }}" ] && [ -n "${{ secrets.DOCKER_TOKEN }}" ]; then
            echo "has-creds=true" >> $GITHUB_OUTPUT
          else
            echo "has-creds=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è Docker Hub credentials not configured. Will push to GitHub Container Registry only."
          fi

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request' && steps.check-docker-creds.outputs.has-creds == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_ORG }}/${{ matrix.base-image }}
            ${{ steps.check-docker-creds.outputs.has-creds == 'true' && format('{0}/{1}', env.DOCKER_ORG, matrix.base-image) || '' }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value={{date 'YYYYMMDD'}},enable={{is_default_branch}}

      - name: Build and push ${{ matrix.base-image }}
        uses: docker/build-push-action@v5
        with:
          context: ./base-images/${{ matrix.base-image }}
          file: ./base-images/${{ matrix.base-image }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  output-results:
    name: Output Build Results
    runs-on: ubuntu-latest
    needs: [build-code198x-base, build-arch-bases]
    outputs:
      built: "true"

    steps:
      - name: Summary
        run: |
          echo "‚úÖ All base images built successfully!"
          echo "üì¶ Base images available:"
          echo "  - ${{ env.GHCR_ORG }}/code198x-base:latest"
          echo "  - ${{ env.GHCR_ORG }}/6502-base:latest"
          echo "  - ${{ env.GHCR_ORG }}/z80-base:latest"
          echo "  - ${{ env.GHCR_ORG }}/68000-base:latest"