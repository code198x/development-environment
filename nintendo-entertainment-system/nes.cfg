# NES linker configuration for cc65
# Standard NROM mapper configuration

MEMORY {
    ZP:     file = "", start = $0000, size = $0100, type = rw, define = yes;
    RAM:    file = "", start = $0200, size = $0600, type = rw, define = yes;
    HDR:    file = %O, start = $0000, size = $0010, fill = yes;
    PRG:    file = %O, start = $8000, size = $8000, fill = yes, define = yes;
    CHR:    file = %O, start = $0000, size = $2000, fill = yes;
}

SEGMENTS {
    HEADER:   load = HDR, type = ro;
    STARTUP:  load = PRG, type = ro, define = yes;
    LOWCODE:  load = PRG, type = ro, optional = yes;
    INIT:     load = PRG, type = ro, define = yes, optional = yes;
    CODE:     load = PRG, type = ro, define = yes;
    RODATA:   load = PRG, type = ro, define = yes;
    DATA:     load = PRG, run = RAM, type = rw, define = yes;
    VECTORS:  load = PRG, type = ro, start = $FFFA;
    BSS:      load = RAM, type = bss, define = yes;
    HEAP:     load = RAM, type = bss, optional = yes;
    ZEROPAGE: load = ZP,  type = zp;
    CHARS:    load = CHR, type = ro;
}

FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = INIT;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}